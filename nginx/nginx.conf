# =============================================================================
# CONFIGURAÇÃO NGINX PARA PRODUÇÃO - DASHBOARD COMU
# =============================================================================
# 
# Este arquivo configura o Nginx como proxy reverso para:
# - Servir o dashboard na porta 80/443
# - Redirecionar API calls para o container da aplicação
# - Gerenciar SSL/HTTPS
# - Rate limiting e segurança
#
# Como usar:
# 1. Configure SSL (certificados)
# 2. Altere o domínio nas configurações
# 3. Execute o deploy
#
# Autor: Dashboard Comu Team
# Data: 2025
# =============================================================================

# Configurações globais
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Configurações de eventos
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

# Configurações HTTP
http {
    # Configurações básicas
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logs
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    
    # Performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=dashboard:10m rate=30r/s;
    
    # =============================================================================
    # CONFIGURAÇÃO DO SERVIDOR PRINCIPAL
    # =============================================================================
    
    server {
        listen 80;
        server_name seu-dominio.com www.seu-dominio.com;
        
        # Redirecionar HTTP para HTTPS
        return 301 https://$server_name$request_uri;
    }
    
    # =============================================================================
    # CONFIGURAÇÃO HTTPS (PRODUÇÃO)
    # =============================================================================
    
    server {
        listen 443 ssl http2;
        server_name seu-dominio.com www.seu-dominio.com;
        
        # =============================================================================
        # CONFIGURAÇÕES SSL
        # =============================================================================
        
        # Certificados SSL (substitua pelos seus)
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        
        # Configurações SSL modernas
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # Headers de segurança
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # =============================================================================
        # HEALTH CHECK
        # =============================================================================
        
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # =============================================================================
        # API ENDPOINTS
        # =============================================================================
        
        location /api/ {
            # Rate limiting para API
            limit_req zone=api burst=20 nodelay;
            
            # Proxy para o container da API
            proxy_pass http://api:8000/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Headers para CORS
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type 'text/plain; charset=utf-8';
                add_header Content-Length 0;
                return 204;
            }
        }
        
        # =============================================================================
        # DASHBOARD
        # =============================================================================
        
        location / {
            # Rate limiting para dashboard
            limit_req zone=dashboard burst=50 nodelay;
            
            # Proxy para o container do dashboard
            proxy_pass http://api:8052/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support (para Dash)
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # =============================================================================
        # ARQUIVOS ESTÁTICOS
        # =============================================================================
        
        location /static/ {
            alias /app/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        location /assets/ {
            alias /app/assets/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # =============================================================================
        # SEGURANÇA
        # =============================================================================
        
        # Bloquear acesso a arquivos sensíveis
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        location ~ \.(env|log|sql)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Bloquear bots maliciosos
        if ($http_user_agent ~* (bot|crawler|spider|scraper)) {
            return 403;
        }
    }
    
    # =============================================================================
    # CONFIGURAÇÃO PARA DESENVOLVIMENTO (SEM SSL)
    # =============================================================================
    
    server {
        listen 80;
        server_name localhost;
        
        # Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # API
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://api:8000/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Dashboard
        location / {
            limit_req zone=dashboard burst=50 nodelay;
            proxy_pass http://api:8052/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }
}
